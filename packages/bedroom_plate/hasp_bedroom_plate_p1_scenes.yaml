##############################################################################
# Automations for handling Scene select buttons on page 1

automation:
  # Set font and text labels for scene buttons on device connection
  - alias: hasp_bedroom_plate_p1_ScenesInit
    trigger:
    - platform: state
      entity_id: 'alarm_control_panel.alarm_panel'
    - platform: state
      entity_id: 'binary_sensor.bedroom_plate_connected'
      to: 'on'
    - platform: state
      entity_id: 'light.hot_tub'
    - platform: homeassistant
      event: start
    action:
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[4].font'
        payload: '1'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[4].txt'
        payload_template: '"Alarm {{ states("alarm_control_panel.alarm_panel").split("_")[0] | title }}"'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[5].font'
        payload: '0'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[5].txt'
        payload_template: '"Hot Tub Lights {{ states("light.hot_tub") | title }}"'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[6].font'
        payload: '2'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[6].txt'
        payload: '"Night"'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[7].font'
        payload: '2'
    - service: mqtt.publish
      data:
        topic: 'hasp/bedroom_plate/command/p[1].b[7].txt'
        payload: '"Lights Off"'

  # Trigger scene.lights_on when p[1].b[4] pressed
  - alias: hasp_bedroom_plate_p1_SceneButton4_1
    trigger:
    - platform: mqtt
      topic: 'hasp/bedroom_plate/state/p[1].b[4]'
      payload: 'ON'
    condition:
      condition: or
      conditions:
        - condition: state
          entity_id: 'alarm_control_panel.alarm_panel'
          state: 'armed_home'
        - condition: state
          entity_id: 'alarm_control_panel.alarm_panel'
          state: 'armed_away'
        - condition: state
          entity_id: 'alarm_control_panel.alarm_panel'
          state: 'triggered'
    action:
      - service: alarm_control_panel.alarm_disarm
        data:
          code: !secret alarm_master_code
          entity_id: alarm_control_panel.alarm_panel

  - alias: hasp_bedroom_plate_p1_SceneButton4_2
    trigger:
    - platform: mqtt
      topic: 'hasp/bedroom_plate/state/p[1].b[4]'
      payload: 'ON'
    condition:
      - condition: state
        entity_id: 'alarm_control_panel.alarm_panel'
        state: 'disarmed'
    action:
      - service: alarm_control_panel.alarm_arm_home
        data:
          code: !secret alarm_master_code
          entity_id: alarm_control_panel.alarm_panel

  # Trigger scene.daylight when p[1].b[5] pressed
  - alias: hasp_bedroom_plate_p1_SceneButton5
    trigger:
    - platform: mqtt
      topic: 'hasp/bedroom_plate/state/p[1].b[5]'
      payload: 'ON'
    action:
    - service: light.toggle
      entity_id: light.hot_tub

  # Trigger scene.night when p[1].b[6] pressed
  - alias: hasp_bedroom_plate_p1_SceneButton6
    trigger:
    - platform: mqtt
      topic: 'hasp/bedroom_plate/state/p[1].b[6]'
      payload: 'ON'
    action:
    - service: scene.turn_on
      entity_id: scene.night

  # Trigger lights_off.night when p[1].b[7] pressed
  - alias: hasp_bedroom_plate_p1_SceneButton7
    trigger:
    - platform: mqtt
      topic: 'hasp/bedroom_plate/state/p[1].b[7]'
      payload: 'ON'
    action:
    - service: scene.turn_on
      entity_id: scene.lights_off
